<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>我的第一篇博客</title>
    <url>/2022/05/08/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/</url>
    <content><![CDATA[<h3 id="hello-world-·-一个后来才知道努力地孩子的第一篇测试博客"><a href="#hello-world-·-一个后来才知道努力地孩子的第一篇测试博客" class="headerlink" title="hello-world-·-一个后来才知道努力地孩子的第一篇测试博客"></a>hello-world-·-一个后来才知道努力地孩子的第一篇测试博客</h3><p><font color='red'>&#10084;<span> </span></font><font>&emsp;<span> 人间烟火，山河远阔</span></font><span> </span></p>

<p>	&emsp; 一岁有一岁的味道，一站有一站的风景，花会沿路盛开    以后的路也是，希望我们都在各自的未来里闪闪发光！     <font color='#FFD700' size=4>&#9733;</font></p>

]]></content>
      <tags>
        <tag>test</tag>
      </tags>
  </entry>
  <entry>
    <title>（一）在GitHub搭建自己的博客---本地</title>
    <url>/2022/05/11/%EF%BC%88%E4%B8%80%EF%BC%89%E5%9C%A8GitHub%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2-%E6%9C%AC%E5%9C%B0/</url>
    <content><![CDATA[<h3 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h3><p>1、安装Hexo 依赖环境：Node.js</p>
<p>2、Hexo 环境安装：Git</p>
<p>3、安装Hexo</p>
<p>4、更换Hexo 博客主题</p>
<p>5、发布本地博客第一篇文章</p>
<h3 id="一、安装Hexo-依赖环境：Node-js"><a href="#一、安装Hexo-依赖环境：Node-js" class="headerlink" title="一、安装Hexo 依赖环境：Node.js"></a>一、安装Hexo 依赖环境：Node.js</h3><p>Node.js是一个基于Chrome V8引擎的JavaScript运行环境。</p>
<p>Node.js是一套JavaScript运行环境，用来支持javaScript代码的执行。也就是安装了Node.js环境，就可以不用依赖浏览器就运行js代码。</p>
<p>（<em>博客不是必须用Node.js来开发</em>）</p>
<h4 id="1、下载Node-js"><a href="#1、下载Node-js" class="headerlink" title="1、下载Node.js"></a>1、下载Node.js</h4><p>Node.js中文官网：<a href="https://nodejs.org/zh-cn/">https://nodejs.org/zh-cn/</a></p>
<p>如下图首页：直接下载安装即可，我选择了16.15.0稳定版。</p>
<img src="../images/a/1.png" alt="Node.js官网首页" style="zoom:60%;" />

<h4 id="2、安装Node-js"><a href="#2、安装Node-js" class="headerlink" title="2、安装Node.js"></a>2、安装Node.js</h4><p>如图：下载好安装包后双击：</p>
<img src="../images/a/2.png" style="zoom:60%;" />

<p>点击“Next”</p>
<img src="../images/a/3.png" alt="3" style="zoom:60%;" />

<p>勾选“同意”</p>
<img src="../images/a/4.png" alt="4" style="zoom:60%;" />

<p>选择安装路径：</p>
<img src="../images/a/5.png" alt="5" style="zoom:60%;" />

<p>继续点击“Next”</p>
<img src="../images/a/6.png" alt="6" style="zoom:60%;" />

<p>不用勾选，直接点击“Next”</p>
<img src="../images/a/7.png" alt="7" style="zoom:60%;" />

<p>选择“安装”</p>
<img src="../images/a/8.png" alt="8" style="zoom:60%;" />

<img src="../images/a/9.png" alt="9" style="zoom:60%;" />

<h4 id="3、测试Node-js是否安装成功"><a href="#3、测试Node-js是否安装成功" class="headerlink" title="3、测试Node.js是否安装成功"></a>3、测试Node.js是否安装成功</h4><p>安装完成后，win+R键打开运行框，输入cmd，然后输入</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm -v</span><br></pre></td></tr></table></figure>

<p> 回车，出现版本信息则说明安装成功。</p>
<p><img src="/../images/a/10.png" alt="10"></p>
<p><img src="/../images/a/11.png" alt="11"></p>
<h3 id="二、Hexo-环境安装：Git"><a href="#二、Hexo-环境安装：Git" class="headerlink" title="二、Hexo 环境安装：Git"></a>二、Hexo 环境安装：Git</h3><p>Git 是一个开源的分布式版本控制系统，可以有效、高速地处理从很小到非常大的项目版本管理。</p>
<h4 id="1、下载-Git"><a href="#1、下载-Git" class="headerlink" title="1、下载 Git"></a>1、下载 Git</h4><p>官网：<a href="https://git-scm.com/">https://git-scm.com/</a></p>
<p>打开官网下载安装包即可，但是下载会非常慢。</p>
<img src="../images/a/12.png" style="zoom:60%;" />



<p><img src="/../images/a/13.png"></p>
<p>这个网站下载很快，也可以看到很多版本<a href="https://npm.taobao.org/mirrors/git-for-windows/">https://npm.taobao.org/mirrors/git-for-windows/</a></p>
<h4 id="2、安装-Git"><a href="#2、安装-Git" class="headerlink" title="2、安装 Git"></a>2、安装 Git</h4><p>双击下载后的 Git，开始安装：</p>
<img src="../images/a/14.png" style="zoom:60%;" />

<p>选择安装目录，可点击“Browse…”更换目录，修改完成后，点击“Next”</p>
<img src="../images/a/15.png" style="zoom:60%;" />

<p>选择安装组件（根据自己需求勾选相关组件），点击“Next”：</p>
<img src="../images/a/16.png" style="zoom:60%;" />

<p>”Git“可以改为其他名字，也可选择“Browse…”选择其他文件夹，然后点击“Next”</p>
<img src="../images/a/17.png" style="zoom:60%;" />

<p>选择 Git 默认编辑器</p>
<p>Git 安装程序里面内置了 10 种编辑器默认的是 Vim </p>
<img src="../images/a/18.png" style="zoom:60%;" />

<p>初始化项目的主干名字：一般选择“Let Git decide”的话默认“master”，也可以选择“Override …”写入其他名字，然后点击“Next”</p>
<img src="../images/a/19.png" style="zoom:60%;" />

<p>调整path环境变量，然后点击“Next”：</p>
<ul>
<li>第一种：只能通过 Git Bash 使用 Git。</li>
<li>第二种：支持命令行和第三方软件使用 Git（<em>新手推荐</em>）。</li>
<li>第三种：从命令提示符使用 Git 和其可选的工具。</li>
</ul>
<img src="../images/a/20.png" style="zoom:60%;" />

<p>选择SSH可执行文件，然后点击“Next”：</p>
<ul>
<li>第一种：Git 自带</li>
<li>第二种：使用外部OpenSSHell</li>
</ul>
<img src="../images/a/21.png" style="zoom:60%;" />

<p>选择https后端传输，然后点击“Next”</p>
<img src="../images/a/22.png" style="zoom:60%;" />

<p>配置行尾符号转换，然后点击“Next”</p>
<ul>
<li>第一种：Windows 样式，提交 Unix 样式的行尾</li>
<li>第二种：按照原样签出，提交 Unix 样式的行尾</li>
<li>第三种：按照原样签出，按照原样提交</li>
</ul>
<img src="../images/a/23.png" style="zoom:60%;" />

<p>配置终端模拟器与 Git Bash 一起使用</p>
<img src="../images/a/24.png" style="zoom:60%;" />

<p>选择默认的 “Git pull” 行为：</p>
<p>Git pull 是获取最新的远程仓库分支到本地，并与本地分支合并</p>
<p>默认选择第一项</p>
<img src="../images/a/25.png" style="zoom:60%;" />

<p>选择一个凭证帮助程序，然点击“Next”</p>
<p>（None—不选择凭证助手）</p>
<img src="../images/a/26.png" style="zoom:60%;" />

<p>启用文件系统缓存</p>
<img src="../images/a/27.png" style="zoom:60%;" />

<p>配置实验性选项</p>
<img src="../images/a/28.png" style="zoom:60%;" />

<p>选择安装</p>
<img src="../images/a/29.png" style="zoom:60%;" />

<img src="../images/a/30.png" style="zoom:60%;" />

<h4 id="3、查看是否安装成功"><a href="#3、查看是否安装成功" class="headerlink" title="3、查看是否安装成功"></a>3、查看是否安装成功</h4><p>在桌面空白处点击右键，多出如下两个选项。</p>
<p><img src="/../images/a/31.png"></p>
<p>Git 安装完成后，通过 “Git Bash here” 就可以打开，输入 git –version回车，出现版本号则说明安装成功。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git --version</span><br></pre></td></tr></table></figure>

<p><img src="/../images/a/32.png"></p>
<h3 id="三、安装-Hexo"><a href="#三、安装-Hexo" class="headerlink" title="三、安装 Hexo"></a>三、安装 Hexo</h3><h4 id="1、本地安装-Hexo"><a href="#1、本地安装-Hexo" class="headerlink" title="1、本地安装 Hexo"></a>1、本地安装 Hexo</h4><p>首先在本地新建一个空文件夹，用来存放 Hexo 的文件和今后写的博客（<em>注意不要出现中文路劲，避免出现问题</em>），我在E盘根目录创建的文件夹— “MyBlog” </p>
<p><img src="/../images/a/33.png"></p>
<p>然后进入新建的文件夹，选择 “Git Bash here” ，输入下方命令：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#安装 Hexo 框架</span><br><span class="line">npm install -g hexo-cli    //-g表示安装全局模块</span><br><span class="line">#初始化文件夹</span><br><span class="line">hexo init</span><br><span class="line">#安装 Hexo 依赖包</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure>

<p><img src="/../images/a/34.png">!   </p>
<p><img src="/../images/a/35.png"></p>
<h4 id="2、本地博客效果"><a href="#2、本地博客效果" class="headerlink" title="2、本地博客效果"></a>2、本地博客效果</h4><p>前三条命令执行成功， Hexo 框架就搭建好了</p>
<p>在 “Git Bash here” 命令行窗口中，执行下方命令：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo g</span><br><span class="line">#生成静态网站</span><br><span class="line">hexo s</span><br><span class="line">#启动服务器</span><br></pre></td></tr></table></figure>

<p><img src="/../images/a/36.png"></p>
<p><img src="/../images/a/37.png"></p>
<p>然后打开浏览器，输入 <a href="http://localhost:4000/">http://localhost:4000/</a> ，就可以看见 Hexo 博客搭建的示例了。（<em>展示的默认主题</em>）</p>
<p><img src="/../images/a/38.png"></p>
<p><img src="/../images/a/39.png" alt="39"></p>
<h3 id="四、更换-Hexo-博客主题"><a href="#四、更换-Hexo-博客主题" class="headerlink" title="四、更换 Hexo 博客主题"></a>四、更换 Hexo 博客主题</h3><h4 id="1、如何找到主题"><a href="#1、如何找到主题" class="headerlink" title="1、如何找到主题"></a>1、如何找到主题</h4><ol>
<li>官方网站可以找到主题页，进入可供选择  <a href="https://hexo.io/zh-cn/">https://hexo.io/zh-cn/</a></li>
</ol>
<img src="../images/a/40.png" style="zoom:60%;" />

<p>2.GitHub 搜索—在GitHub官网可搜索相关主题名称</p>
<p>3.网上搜索，直接搜索 “Hexo”主题，相关词汇，就可以看到别人推荐的主题。</p>
<h4 id="2、主题更换"><a href="#2、主题更换" class="headerlink" title="2、主题更换"></a>2、主题更换</h4><p>以  <strong>ayer</strong> 为例，可以去参考 <a href="https://shen-yu.gitee.io/2019/ayer/">https://shen-yu.gitee.io/2019/ayer/</a></p>
<p>在 Hexo 农科根目录下（D:\MyBlog ）下，<code>右键执行</code>Git Bash here</p>
<p>然后执行</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 下载主题仓库到 themes 文件夹， git clone &lt;仓库地址&gt; themes/&lt;主题名&gt; </span><br><span class="line">git clone https://github.com/Shen-Yu/hexo-theme-ayer.git themes/ayer</span><br><span class="line"></span><br><span class="line">#仓库地址可以在主题的 Github 主页获取到</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<img src="../images/a/41.png" style="zoom:60%;" />

<p><img src="/../images/a/57.png"></p>
<p>当我们再打开MyBlog文件夹下“themes”的文件可以看到多了 ayer 文件夹</p>
<p><img src="/../images/a/58.png"></p>
<p>然后用记事本打开根目录下的“_config.yml”文件（E:\MyBlog \ _cofig.yml），找到 theme 标签，默认是“landscape”主题，把它的名字改为要更换的主题的名字“ayer”</p>
<img src="../images/a/50.png" style="zoom:60%;" />

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Extensions</span><br><span class="line">## Plugins: https://hexo.io/plugins/</span><br><span class="line">## Themes: https://hexo.io/themes/</span><br><span class="line">theme: ayer</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 清理 &amp;&amp; 生成 &amp;&amp; 启动</span><br><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo s</span><br></pre></td></tr></table></figure>

<img src="../images/a/59.png" style="zoom:60%;" />



<p>再次打来浏览器，打开网址 <a href="http://localhost:4000/">http://localhost:4000</a>  ，可以看到博客已换上该主题</p>
<img src="../images/a/60.png" style="zoom:60%;" />



<h4 id="3、修改主题"><a href="#3、修改主题" class="headerlink" title="3、修改主题"></a>3、修改主题</h4><p>更换好主题后，博主的名字、图片、背景、首页以及点击特效等可以进行修改。</p>
<p>Hexo 的配置基本都在根目录下的“_config.yml” 文件，对于给文件的内容解释在 Hexo 官网看到详细讲解。（<a href="https://hexo.io/zh-cn/docs/%EF%BC%89">https://hexo.io/zh-cn/docs/）</a></p>
<p>对于 <strong>ayer</strong> 主题中的细致修改在第三方主题根目录下（”E:\MyBlog\themes\ayer\ _config.yml“）文件，细致的修改内容可以看<a href="https://shen-yu.gitee.io/2019/ayer/">https://shen-yu.gitee.io/2019/ayer/</a></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Site  ---博客标题</span><br><span class="line">title: 三里春风</span><br><span class="line">subtitle: &#x27;&#x27;</span><br><span class="line">description: &#x27;&#x27;</span><br><span class="line">keywords:</span><br><span class="line"># 博客作者</span><br><span class="line">author: 糖葫芦呀</span><br><span class="line"># 网站语言，这里我选择中文</span><br><span class="line">language: zh-CN</span><br><span class="line">timezone: &#x27;&#x27;</span><br></pre></td></tr></table></figure>

<p>参考 <strong>ayer</strong> 的文档，修改（<em>E:\MyBlog\themes\ayer 下的_config.yml</em>）：</p>
<p>修改侧边栏</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 侧边栏菜单</span><br><span class="line">menu:</span><br><span class="line">  主页: /</span><br><span class="line">  归档: /archives</span><br><span class="line">  分类: /categories</span><br><span class="line">  标签: /tags</span><br><span class="line">  关于我: about</span><br></pre></td></tr></table></figure>

<p>修改滚动标题显示：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">subtitle:</span><br><span class="line">  enable: true # 是否开启动效</span><br><span class="line">  text:  于高山之巅，方见大河奔涌</span><br><span class="line">  text2:  于群峰之上，更觉乘风浩荡</span><br><span class="line">  text3: 山高水长，一切都是刚刚好</span><br><span class="line">  </span><br></pre></td></tr></table></figure>

<p>修改网站图标和侧栏图标</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">favicon: /favicon1.ico</span><br><span class="line">logo: /images/favicon.ico</span><br></pre></td></tr></table></figure>



<p>修改封面背景图</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cover:</span><br><span class="line">  enable: true</span><br><span class="line">  path: /images/l6.jpg </span><br><span class="line">  logo: false #/images/ayer.svg，如果不要直接设置成false</span><br></pre></td></tr></table></figure>

<p>关闭主题作者的打赏</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">reward_type: 0</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h4 id="4、查看修改效果"><a href="#4、查看修改效果" class="headerlink" title="4、查看修改效果"></a>4、查看修改效果</h4><p>大致文档修改已完成，更改完成后查看修改效果</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo g &amp;&amp; hexo s</span><br></pre></td></tr></table></figure>

<p><img src="/../images/a/52.png"></p>
<h3 id="五、发布本地博客第一篇文章"><a href="#五、发布本地博客第一篇文章" class="headerlink" title="五、发布本地博客第一篇文章"></a>五、发布本地博客第一篇文章</h3><p>本地博客搭建完成，里面有一篇示例的 “Hello Word” 文章</p>
<h4 id="1、写出第一篇文章"><a href="#1、写出第一篇文章" class="headerlink" title="1、写出第一篇文章"></a>1、写出第一篇文章</h4><p>在根目录下单击右键，选择 “Git Bash here” ，输入下方命令：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo new &quot;我的第一篇博客&quot;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>运行完成后，在（E:\MyBlog\source_posts）下可以看到 “我的第一篇博客.md” 文件，这就是新生成的博客文章，该文件可以用 “Typora” 打开并编辑。</p>
<p>先用 “Ctrl  +  C ” 停止服务器，在执行 “hexo g &amp;&amp; hexo s” 重新部署，刷新  <a href="http://localhost:4000/">http://localhost:4000/</a>  ，就可以看到博客上多了一篇文章</p>
<img src="../images/a/61.png" style="zoom:60%;" />



<h4 id="2、更改日期文档配置"><a href="#2、更改日期文档配置" class="headerlink" title="2、更改日期文档配置"></a>2、更改日期文档配置</h4><p>在根目录配置文件（E:\MyBlog_config.yml）文件中 new_post_name 参数，这样新建文章时文件会自动加上年月日的信息。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">new_post_name: title.md # File name of new posts</span><br><span class="line"></span><br><span class="line"># 想要下次创建文件自动加上日期信息</span><br><span class="line">new_post_name: :year-:month-:day-:title.md</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="六、总结"><a href="#六、总结" class="headerlink" title="六、总结"></a>六、总结</h3><p>到这里本地博客就已经搭建成功，之后就可以部署在 GitHub 远程服务器上了。一定要注意文档编写时，关键字冒号后面要加空格，而且一定要区分全角和半角，不然是没有效果显示的。</p>
<h3 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h3><p><a href="https://yushuaige.github.io/">https://yushuaige.github.io/</a></p>
<p><a href="https://shen-yu.gitee.io/2019/ayer/">https://shen-yu.gitee.io/2019/ayer/</a></p>
<p><a href="https://blog.csdn.net/a6661314/article/details/122975744">https://blog.csdn.net/a6661314/article/details/122975744</a></p>
]]></content>
      <categories>
        <category>博客搭建</category>
      </categories>
      <tags>
        <tag>博客搭建，hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>(二)在GitHub搭建自己的博客---基于GitHub Pages</title>
    <url>/2022/05/18/%E4%BA%8C-%E5%9C%A8GitHub%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2-%E5%9F%BA%E4%BA%8EGitHub-Pages/</url>
    <content><![CDATA[<h3 id="一、Github-Pages-是什么？"><a href="#一、Github-Pages-是什么？" class="headerlink" title="一、Github Pages 是什么？"></a>一、Github Pages 是什么？</h3><p>GitHub 是一个面向开源及私有软件项目的托管平台，因为只支持Git作为唯一的版本库格式进行托管，故名<em>GitHub</em>。</p>
<p><em>GitHub</em> 于2008年4月10日正式上线，除了<a href="https://baike.baidu.com/item/Git/12647237">Git</a>代码仓库托管及基本的Web管理界面以外，还提供了订阅、讨论组、文本渲染、在线文件编辑器、协作图谱（报表）、代码片段分享（Gist）等功能。</p>
<p>Github Pages 是直接从 Github 存储库托管的静态网站。只需要注册一个账号就可以使用。在 GitHub Pages 官网<a href="https://pages.github.com/">pages.github</a> 也可以看到官方推荐使用 GitHub Pages 搭建博客的教程。</p>
<p>GitHub Pages 服务器在国外，访问速度并不高，所以也可以选择国内与其相似功能的 Gitee Pages。</p>
<h3 id="二、准备"><a href="#二、准备" class="headerlink" title="二、准备"></a>二、准备</h3><p>要提前注册好自己的账号呀！</p>
<h4 id="1、注册-GitHub-账号"><a href="#1、注册-GitHub-账号" class="headerlink" title="1、注册 GitHub 账号"></a>1、注册 GitHub 账号</h4><p>打开 GitHub 官网：<a href="https://github.com/">github.com</a></p>
<p>在 GitHub 官网注册一个账号（点击右上角的“Sign up”,注册，填写用户名、密码、邮箱。点击注册后会发送一封验证邮件，登录邮箱验证即可）：</p>
<img src="../images/(2)GitHub Pages/1.png" style="zoom:60%;" />

<img src="../images/(2)GitHub Pages/2.png" style="zoom:60%;" />

<p>学生可以申请学生开发包，享受部分开发工具免费使用。</p>
<img src="../images/(2)GitHub Pages/3.png" style="zoom:60%;" />

<h4 id="2、创建-GitHub-Pages-仓库"><a href="#2、创建-GitHub-Pages-仓库" class="headerlink" title="2、创建 GitHub Pages 仓库"></a>2、创建 GitHub Pages 仓库</h4><p>点击上方“Sign in”登录，点击左上角的 “new” 新建仓库。进入如下界面：</p>
<p>因为每个 GitHub 账户只能建立一个 GitHub Pages 界面，所以 Repository name 必须填&lt;用户名&gt;.github.io，否则就会建立一个普通仓库，GitHub Pages 功能不会生效。比如用户名是xxx，Repository name 这里就填xxx.github.io，不知道用户名是哪个，可以点击页面右上角头像，看到第一行“Signed in as xxx”字样， xxx即为这里的用户名。</p>
<p>Description 填写仓库描述，比如 jacksparrow’s blog等，可不填。</p>
<p>注意勾选 Public ，否则 GitHub Pages 功能不会生效。建议勾选 Add a README file，会自动生成一个 readme.md文件。</p>
<p>最后点击Create repository创建仓库。</p>
<img src="../images/(2)GitHub Pages/4.png" style="zoom:60%;" />

<img src="../images/(2)GitHub Pages/5.png" style="zoom:60%;" />

<h4 id="3、测试-Github-Pages-页面"><a href="#3、测试-Github-Pages-页面" class="headerlink" title="3、测试 Github Pages 页面"></a>3、测试 Github Pages 页面</h4><p>创建好 GitHub Pages 仓库后，可以写一个静态网页测试一下能否访问 GitHub Pages 服务。</p>
<p>选择“Commit new file”提交到仓库：</p>
<p><img src="/"><img src="../images/(2)GitHub Pages/6.png" alt="6" style="zoom:60%;" /></p>
<img src="../images/(2)GitHub Pages/7.png" style="zoom:60%;" />

<img src="../images/(2)GitHub Pages/8.png" style="zoom:60%;" />

<p>然后打开一个新的网页，输入网址：https:&#x2F;&#x2F;&lt;用户名&gt;.github.io，就可以看到刚刚创建的网页了。说明 Github Pages 服务正常。</p>
<img src="../images/(2)GitHub Pages/9.png" style="zoom:60%;" />

<h3 id="三、-GitHub-Pages-发布"><a href="#三、-GitHub-Pages-发布" class="headerlink" title="三、 GitHub Pages 发布"></a>三、 GitHub Pages 发布</h3><p>我们现在可以看到提交的测试静态网页已经可以看到，下面就是将 Hexo 框架部署。</p>
<h4 id="1、配置-Git-参数"><a href="#1、配置-Git-参数" class="headerlink" title="1、配置 Git 参数"></a>1、配置 Git 参数</h4><p>在博客根目录下，右键，打开 “ Git Bash Here”</p>
<p>配置用户名和邮箱，用于 Git 提交时身份识别。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># username 和 username@xxx.com 是注册 GitHub 时的用户名和邮箱</span><br><span class="line">git config --global user.name &quot;username&quot;</span><br><span class="line">git config --global user.email &quot;username@XXX.com&quot;</span><br></pre></td></tr></table></figure>

<p><img src="/../images/(2">GitHub Pages&#x2F;11.png)</p>
<p>接下来生成 SSH Keys，用于 Git 提交时的权限控制和加密，本地根据 RSA 算法生成公私密钥对，然后将公钥添加到 GitHub 上，本机就可以提交代码到自己的 GitHub 库了。这个是根据当前使用的电脑的一些信息生成的，所以换电脑提交时要重新生成并添加。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 输入下方命令，回车三次，到结束</span><br><span class="line"># username@xxx.com 是注册 GitHub 时的邮箱</span><br><span class="line">ssh-keygen -t rsa -C &quot;username@xxx.com&quot;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><img src="/../images/(2">GitHub Pages&#x2F;12.png)</p>
<p>接着输入下方命令，查看公钥内容（是一个以 ssh-rsa 开头，以邮箱结尾的长字符串）</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># cat后面的路径就是上图中的公钥文件路径，直接复制过来就可以</span><br><span class="line">cat /c/Users/XXX/.ssh/id_rsa.pub</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><img src="/../images/(2">GitHub Pages&#x2F;13.png)</p>
<p>复制公钥内容（在 Git Bash 中，选中字段再松开鼠标就会将内容自动复制到剪贴板，单击鼠标左键可以粘贴）；</p>
<p>打开自己的 GitHub 主页，点击右上角的头像，点击“Settings” —&gt; “SSH and GPG keys”</p>
<img src="../images/(2)GitHub Pages/14.png" style="zoom:60%;" />

<p>然后点击 “new SSH key”</p>
<p><img src="/../images/(2">GitHub Pages&#x2F;15.png)</p>
<p>Title 自己定义的名字， Key 填写已复制的公钥内容，然后点击 “Add SSH key”。</p>
<p><img src="/../images/(2">GitHub Pages&#x2F;16.png)</p>
<p>可以在官网看到配置的文档相关步骤：</p>
<p><img src="/../images/(2">GitHub Pages&#x2F;17.png)</p>
<p>最后测试连通一下，看一下 Git 参数是否配置成功。结果中出现 <em>用户名</em> 和 <em>successfully</em> 说明配置成功。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 直接执行下方命令，询问是否连接，输入---yes</span><br><span class="line">ssh -T git@github.com</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><img src="/../images/(2">GitHub Pages&#x2F;18.png)</p>
<h4 id="2、安装-Hexo-发布插件"><a href="#2、安装-Hexo-发布插件" class="headerlink" title="2、安装 Hexo 发布插件"></a>2、安装 Hexo 发布插件</h4><p>在博客根目录下，右键，打开 “ Git Bash Here”</p>
<p>输入下面的命令，安装<code>hexo-deployer-git</code></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 这个插件用于把生成好的静态网页上传到 GitHub Pages 仓库</span><br><span class="line">npm install hexo-deployer-git</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><img src="/../images/(2">GitHub Pages&#x2F;19.png)</p>
<h4 id="3、发布-啦"><a href="#3、发布-啦" class="headerlink" title="3、发布 啦"></a>3、发布 啦</h4><p>终于到最后的一步啦！完成这最后一步配置，我们的博客就发布成功啦！！！</p>
<p>在博客根目录下，找到 “_config.yaml” (E:\MyBlog_config.yaml)，拉到最后一行，修改下面配置（<em>记得保存哦</em>）</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 其中 xxxxxx 是前面多次用到的你的GitHub用户名</span><br><span class="line"># 若文件中没有下方配置自行添加</span><br><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: git@github.com:xxxxxx/xxxxxx.github.io.git</span><br><span class="line">  branch: main</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>到这里我们执行最后一步，和输入下方命令</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 注意最后变成d了，原来的s表示服务起在本地，现在的d表示部署在远端</span><br><span class="line">hexo g &amp;&amp; hexo d</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>待命令执行完毕，打开浏览器，输入网址<code>https://你的用户名.github.io</code>，可以看到一个和第一篇中本地部署的一模一样的博客出现了。</p>
<ul>
<li>如果命令执行完后在验证博客是否部署成功时并没有显示，先不要着急哦，在确保自己前面没有配置错误，没有误写的情况下，要耐心等待一会，会由于网站自身访问本来就慢有关，可以稍稍再多等一下下，或者在浏览器从新打开一个无痕网页。</li>
</ul>
<p>如下图我们就可以访问到了！ https:&#x2F;&#x2F;用户名.github.io</p>
<p><img src="/../images/(2">GitHub Pages&#x2F;20.png)</p>
<h3 id="四、总结"><a href="#四、总结" class="headerlink" title="四、总结"></a>四、总结</h3><p>到这里我们的个人博客就搭建好了，通过网址别人也可以一起访问了。其实搭建博客不止可以用 Hexo 也可以用 WordPress 、 Python 等，我们可以根据其他资料内容来搭建 GitHub 博客。</p>
<p>将博客搭建好部署上去的那一瞬间可以说是“今朝欢乐便无愁”，好了，我们的博客搭建到这里就收锣罢鼓了，我们后续的学习分享再见！！！</p>
<p><font color='red'>&#10084;<span> </span></font>

]]></content>
      <categories>
        <category>博客搭建</category>
      </categories>
      <tags>
        <tag>博客搭建，Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>搭建 Hadoop 伪分布（Ubuntu18）</title>
    <url>/2022/05/25/%E6%90%AD%E5%BB%BA-Hadoop-%E4%BC%AA%E5%88%86%E5%B8%83%EF%BC%88Ubuntu18%EF%BC%89/</url>
    <content><![CDATA[<h3 id="一、准备工作"><a href="#一、准备工作" class="headerlink" title="一、准备工作"></a>一、准备工作</h3><p>1、安装并下载虚拟机 VMware</p>
<p>官网：<a href="https://www.vmware.com/cn.html">https://www.vmware.com/cn.html</a></p>
<p>2、下载  Ubuntu18.04镜像文件</p>
<p>3、准备好 java    jdk1.8</p>
<p>4、hadoop 3 版本</p>
<h3 id="二、-安装-Ubuntu-环境"><a href="#二、-安装-Ubuntu-环境" class="headerlink" title="二、 安装 Ubuntu 环境"></a>二、 安装 Ubuntu 环境</h3><h4 id="1、安装Ubuntu环境"><a href="#1、安装Ubuntu环境" class="headerlink" title="1、安装Ubuntu环境"></a>1、安装Ubuntu环境</h4><ol>
<li>创建新的虚拟机</li>
</ol>
<p>![](..&#x2F;images&#x2F;5-25 hadoop伪分布&#x2F;1.png)</p>
<p>点击下一步：</p>
<img src="../images/5-25 hadoop伪分布/2.png" style="zoom:60%;" />

<p>2.找到本地Ubuntu镜像文件，然后点击下一步：</p>
<img src="../images/5-25 hadoop伪分布/3.png" style="zoom:60%;" />

<p>3.输入用户名和密码信息：</p>
<img src="../images/5-25 hadoop伪分布/4.png" style="zoom:60%;" />

<p>点击下一步：</p>
<img src="../images/5-25 hadoop伪分布/5.png" style="zoom:60%;" />

<ol start="4">
<li>磁盘选择 40GB：</li>
</ol>
<img src="../images/5-25 hadoop伪分布/6.png" style="zoom:60%;" />

<ol start="5">
<li>自定义硬件信息（内存设置为4GB）：</li>
</ol>
<img src="../images/5-25 hadoop伪分布/7.png" style="zoom:60%;" />

<img src="../images/5-25 hadoop伪分布/8.png" style="zoom:60%;" />

<ol start="6">
<li>点击下一步 –&gt; 完成 –&gt;进入起动界面</li>
</ol>
<img src="../images/5-25 hadoop伪分布/9.png" style="zoom:60%;" />

<img src="../images/5-25 hadoop伪分布/10.png" style="zoom:60%;" />

<ol start="7">
<li>等待进入</li>
</ol>
<img src="../images/5-25 hadoop伪分布/11.png" style="zoom:60%;" />

<ol start="8">
<li>选择语言 — English （空格键或回车键可进行选择）</li>
</ol>
<img src="../images/5-25 hadoop伪分布/12.png" style="zoom:60%;" />

<ol start="9">
<li>根据自己需求选择更新信息（这里我选择不更新啦）</li>
</ol>
<img src="../images/5-25 hadoop伪分布/13.png" style="zoom:60%;" />

<ol start="10">
<li>设置键盘页面，继续done</li>
</ol>
<img src="../images/5-25 hadoop伪分布/14.png" style="zoom:60%;" />

<ol start="11">
<li>进入网卡和IP地址界面，继续操作：done</li>
</ol>
<img src="../images/5-25 hadoop伪分布/15.png" style="zoom:60%;" />

<p>继续点击 “done”</p>
<img src="../images/5-25 hadoop伪分布/16.png" style="zoom:60%;" />

<ol start="12">
<li>更换镜像地址为国内地址：</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://mirrors.aliyun.com/ubuntu</span><br></pre></td></tr></table></figure>

<img src="../images/5-25 hadoop伪分布/17.png" style="zoom:60%;" />

<ol start="13">
<li>进入磁盘选择</li>
</ol>
<img src="../images/5-25 hadoop伪分布/19.png" style="zoom:60%;" />

<img src="../images/5-25 hadoop伪分布/20.png" style="zoom:60%;" />

<ol start="14">
<li>继续点击 “done”</li>
</ol>
<img src="../images/5-25 hadoop伪分布/21.png" style="zoom:60%;" />

<p>![](..&#x2F;images&#x2F;5-25 hadoop伪分布&#x2F;22.png)</p>
<ol start="15">
<li>设置用户名和密码：</li>
</ol>
<img src="../images/5-25 hadoop伪分布/23.png" style="zoom:60%;" />

<ol start="16">
<li>按下空格选中 ssh ，继续默认选项，选择 “done”</li>
</ol>
<img src="../images/5-25 hadoop伪分布/24.png" style="zoom:60%;" />

<img src="../images/5-25 hadoop伪分布/25.png" style="zoom:60%;" />

<ol start="17">
<li>等待安装</li>
</ol>
<img src="../images/5-25 hadoop伪分布/26.png" style="zoom:60%;" />

<img src="../images/5-25 hadoop伪分布/27.png" style="zoom:60%;" />

<img src="../images/5-25 hadoop伪分布/28.png" style="zoom:60%;" />

<ol start="18">
<li>重启后用刚刚创建的 “hadoop” 的用户名和密码登入</li>
</ol>
<img src="../images/5-25 hadoop伪分布/29.png" style="zoom:60%;" />

<ol start="19">
<li>进入后使用ip a查看IP地址是否正确：</li>
</ol>
<p>![](..&#x2F;images&#x2F;5-25 hadoop伪分布&#x2F;30.png)</p>
<p>20 . 创建 root 密码并登陆测试（因为 Ubuntu 中的 root 密码不像 centos 中会在安装好后创建）</p>
<p>![](..&#x2F;images&#x2F;5-25 hadoop伪分布&#x2F;31.png)</p>
<p>![32](..&#x2F;images&#x2F;5-25 hadoop伪分布&#x2F;32.png)</p>
<p>21 . 更改默认配置文件，使Ubuntu可以连接ftp：</p>
<p>进入到&#x2F;etc&#x2F;ssh目录下，更改sshd.config文件，如下：</p>
<p>![](..&#x2F;images&#x2F;5-25 hadoop伪分布&#x2F;33.png)</p>
<p>![34](..&#x2F;images&#x2F;5-25 hadoop伪分布&#x2F;34.png)</p>
<p>22 . 重启配置文件：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sodu service ssh restart</span><br></pre></td></tr></table></figure>

<p>![](..&#x2F;images&#x2F;5-25 hadoop伪分布&#x2F;35.png)</p>
<ol start="23">
<li>测试是否可ftp连接成功，如图则成功访问：</li>
</ol>
<img src="../images/5-25 hadoop伪分布/36.png" style="zoom:60%;" />

<img src="../images/5-25 hadoop伪分布/37.png" style="zoom:60%;" />

<h4 id="2、伪分布搭建"><a href="#2、伪分布搭建" class="headerlink" title="2、伪分布搭建"></a>2、伪分布搭建</h4><h5 id="1、将用到的问间通过ftp闯入到：-x2F-usr-x2F-local-x2F-software"><a href="#1、将用到的问间通过ftp闯入到：-x2F-usr-x2F-local-x2F-software" class="headerlink" title="1、将用到的问间通过ftp闯入到：&#x2F;usr&#x2F;local&#x2F;software"></a>1、将用到的问间通过ftp闯入到：&#x2F;usr&#x2F;local&#x2F;software</h5><p>创建 software 文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd /usr/local/</span><br><span class="line">sudo mkdir software    //sudo-当前为 hadoop 用户下</span><br></pre></td></tr></table></figure>

<p>![](..&#x2F;images&#x2F;5-25 hadoop伪分布&#x2F;38.png)</p>
<p>![](..&#x2F;images&#x2F;5-25 hadoop伪分布&#x2F;39.png)</p>
<p>传输完成后，再次进入&#x2F;usc&#x2F;local&#x2F;software目录下查看看是否成功，如下图，则已成功：</p>
<p>![](..&#x2F;images&#x2F;5-25 hadoop伪分布&#x2F;40.png)</p>
<h5 id="2、更新-apt"><a href="#2、更新-apt" class="headerlink" title="2、更新 apt"></a>2、更新 apt</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo apt-get update</span><br></pre></td></tr></table></figure>

<p>![](..&#x2F;images&#x2F;5-25 hadoop伪分布&#x2F;41.png)</p>
<h5 id="3、安装-ssh-配置本机免密登陆"><a href="#3、安装-ssh-配置本机免密登陆" class="headerlink" title="3、安装 ssh 配置本机免密登陆"></a>3、安装 ssh 配置本机免密登陆</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo apt-get install openssh-server</span><br></pre></td></tr></table></figure>

<p>![](..&#x2F;images&#x2F;5-25 hadoop伪分布&#x2F;42.png)</p>
<p>安装后可使用ssh localhost 登录本机，如图：</p>
<p>此时会有如下提示(SSH首次登陆提示)，输入 yes 。然后按提示输入 hadoop的密码，这样就登陆到本机了。记得登陆后退出：“exit;”</p>
<img src="../images/5-25 hadoop伪分布/43.png" style="zoom:60%;" />

<p>![](..&#x2F;images&#x2F;5-25 hadoop伪分布&#x2F;44.png)</p>
<p>然后利用 ssh-keygen 生成密钥，并将密钥加入到授权中：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd ~/.ssh/</span><br><span class="line"></span><br><span class="line">ssh localhostssh-keygen -t rsa     //连续敲三下回车</span><br><span class="line"></span><br><span class="line">cat ./id_rsa.pub &gt;&gt; ./authorized_keys   //加入授权</span><br><span class="line"></span><br><span class="line">Ssh localhost          //此时不用密码就可登录</span><br></pre></td></tr></table></figure>

<img src="../images/5-25 hadoop伪分布/45.png" style="zoom:60%;" />

<p>再次登录—无密码，如下图（记得退出）：</p>
<img src="../images/5-25 hadoop伪分布/46.png" style="zoom:60%;" />

<p>![47](..&#x2F;images&#x2F;5-25 hadoop伪分布&#x2F;47.png)</p>
<h5 id="4、安装-java-环境"><a href="#4、安装-java-环境" class="headerlink" title="4、安装 java 环境"></a>4、安装 java 环境</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo mkdir -p /usr/lib/jvm</span><br></pre></td></tr></table></figure>

<p>![](..&#x2F;images&#x2F;5-25 hadoop伪分布&#x2F;48.png)</p>
<p>使用解压缩命令将jdk1.8相关内容解压缩到上面创建的jvm中</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo tar -zxvf ./jdk-8u291-linux-x64.tar.gz -C /usr/lib/jvm</span><br></pre></td></tr></table></figure>

<p>![](..&#x2F;images&#x2F;5-25 hadoop伪分布&#x2F;49.png)</p>
<h5 id="5、进入-jvm-文件查看是否解压缩成功："><a href="#5、进入-jvm-文件查看是否解压缩成功：" class="headerlink" title="5、进入 jvm 文件查看是否解压缩成功："></a>5、进入 jvm 文件查看是否解压缩成功：</h5><p>![](..&#x2F;images&#x2F;5-25 hadoop伪分布&#x2F;50.png)</p>
<p>为其改一个简短的名字：</p>
<p>![](..&#x2F;images&#x2F;5-25 hadoop伪分布&#x2F;51.png)</p>
<h5 id="6、设置环境变量，在bashrc文件中添加如下内容："><a href="#6、设置环境变量，在bashrc文件中添加如下内容：" class="headerlink" title="6、设置环境变量，在bashrc文件中添加如下内容："></a>6、设置环境变量，在bashrc文件中添加如下内容：</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">export JAVA_HOME=/usr/lib/jvm/jdk</span><br><span class="line">export JRE_HOME=$&#123;JAVA_HOME&#125;/jre</span><br><span class="line">export CLASSPATH=.:$&#123;JAVA_HOME&#125;/lib:$&#123;JRE_HOME&#125;/lib</span><br><span class="line">export PATH=$&#123;JAVA_HOME&#125;/bin:$PATH </span><br></pre></td></tr></table></figure>

<p>![](..&#x2F;images&#x2F;5-25 hadoop伪分布&#x2F;52.png)</p>
<p>![53](..&#x2F;images&#x2F;5-25 hadoop伪分布&#x2F;53.png)</p>
<p>添加成功保存退出，让文件立即生效,并验证是否安装成功：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">source  ~/.bashrc</span><br></pre></td></tr></table></figure>

<p>![](..&#x2F;images&#x2F;5-25 hadoop伪分布&#x2F;54.png)</p>
<p>如上图执行java -version命令出现版本号等信息则安装成功。</p>
<h5 id="7、安装-Hadoop3-1-3"><a href="#7、安装-Hadoop3-1-3" class="headerlink" title="7、安装 Hadoop3.1.3"></a>7、安装 Hadoop3.1.3</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo tar -zxf /usr/local/software/hadoop-3.1.3.tar.gz -C /usr/local   // 解压到/usr/local中cd /usr/local/</span><br><span class="line"></span><br><span class="line">sudo mv ./hadoop-3.1.3/ ./hadoop    // 将文件夹名改为hadoop</span><br><span class="line">sudo chown -R hadoop ./hadoop    // 修改文件权限 </span><br></pre></td></tr></table></figure>

<p>Hadoop 解压后即可使用。输入如下命令来检查 Hadoop 是否可用，成功则会显示 Hadoop 版本信息：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd /usr/local/hadoop</span><br><span class="line">./bin/hadoop version </span><br></pre></td></tr></table></figure>

<p>![](..&#x2F;images&#x2F;5-25 hadoop伪分布&#x2F;58.png)</p>
<h5 id="8、-hadoop-伪分布"><a href="#8、-hadoop-伪分布" class="headerlink" title="8、 hadoop 伪分布"></a>8、 hadoop 伪分布</h5><p>Hadoop 的配置文件位于 &#x2F;usr&#x2F;local&#x2F;hadoop&#x2F;etc&#x2F;hadoop&#x2F; 中，伪分布式需要修改2个配置文件 core-site.xml 和 hdfs-site.xml 。 </p>
<p>先找到core-site.xml文件：![](..&#x2F;images&#x2F;5-25 hadoop伪分布&#x2F;59.png)</p>
<p>修改配置为：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;configuration&gt;</span><br><span class="line">    &lt;property&gt;</span><br><span class="line">        &lt;name&gt;hadoop.tmp.dir&lt;/name&gt;</span><br><span class="line">        &lt;value&gt;file:/usr/local/hadoop/tmp&lt;/value&gt;</span><br><span class="line">    &lt;/property&gt;</span><br><span class="line">    &lt;property&gt;</span><br><span class="line">        &lt;name&gt;fs.defaultFS&lt;/name&gt;</span><br><span class="line">        &lt;value&gt;hdfs://localhost:9000&lt;/value&gt;</span><br><span class="line">    &lt;/property&gt;</span><br><span class="line">&lt;/configuration&gt; </span><br></pre></td></tr></table></figure>

<img src="../images/5-25 hadoop伪分布/60.png" style="zoom:67%;" />

<p>找到hdfs-site.xml文件：</p>
<p>![](..&#x2F;images&#x2F;5-25 hadoop伪分布&#x2F;61.png)</p>
<p>修改为一下内容：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;configuration&gt;</span><br><span class="line">    &lt;property&gt;</span><br><span class="line">        &lt;name&gt;dfs.replication&lt;/name&gt;</span><br><span class="line">        &lt;value&gt;1&lt;/value&gt;</span><br><span class="line">    &lt;/property&gt;</span><br><span class="line">    &lt;property&gt;</span><br><span class="line">        &lt;name&gt;dfs.namenode.name.dir&lt;/name&gt;</span><br><span class="line">        &lt;value&gt;file:/usr/local/hadoop/tmp/dfs/name&lt;/value&gt;</span><br><span class="line">    &lt;/property&gt;</span><br><span class="line">    &lt;property&gt;</span><br><span class="line">        &lt;name&gt;dfs.datanode.data.dir&lt;/name&gt;</span><br><span class="line">        &lt;value&gt;file:/usr/local/hadoop/tmp/dfs/data&lt;/value&gt;</span><br><span class="line">    &lt;/property&gt;</span><br><span class="line">&lt;/configuration&gt;</span><br></pre></td></tr></table></figure>

<img src="../images/5-25 hadoop伪分布/62.png" style="zoom:60%;" />

<p>配置完成后，执行nanenode的格式化：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd /usr/local/hadoop</span><br><span class="line">./bin/hdfs namenode -format   //格式化</span><br><span class="line"></span><br><span class="line">cd /usr/local/hadoop</span><br><span class="line">./sbin/start-dfs.sh #start-dfs.sh   //启动NameNode和DataNode</span><br></pre></td></tr></table></figure>

<p>![](..&#x2F;images&#x2F;5-25 hadoop伪分布&#x2F;64.png)</p>
<p>如上图则启动成功。</p>
<h5 id="9、检验环境是否配置成功"><a href="#9、检验环境是否配置成功" class="headerlink" title="9、检验环境是否配置成功"></a>9、检验环境是否配置成功</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">jps     //检验</span><br><span class="line"></span><br><span class="line">NameNode</span><br><span class="line">ResourceManager</span><br><span class="line">SecondaryNameNode             //出现以上服务则启动成功</span><br></pre></td></tr></table></figure>



<h3 id="三、总结"><a href="#三、总结" class="headerlink" title="三、总结"></a>三、总结</h3><p>Hadoop 伪分布环境已经搭建好了，下一次来分享在这个环境的基础上 Hive 数仓的配置与 MySQL 数据库的配置吧！</p>
]]></content>
      <categories>
        <category>Hadoop 伪分布</category>
      </categories>
      <tags>
        <tag>Hadoop</tag>
        <tag>Ubuntu</tag>
      </tags>
  </entry>
</search>
