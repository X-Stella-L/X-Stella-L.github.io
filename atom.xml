<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>三里春风</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2022-05-18T15:49:01.439Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>Stella</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>(二)在GitHub搭建自己的博客---基于GitHub Pages</title>
    <link href="http://example.com/2022/05/18/%E4%BA%8C-%E5%9C%A8GitHub%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2-%E5%9F%BA%E4%BA%8EGitHub-Pages/"/>
    <id>http://example.com/2022/05/18/%E4%BA%8C-%E5%9C%A8GitHub%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2-%E5%9F%BA%E4%BA%8EGitHub-Pages/</id>
    <published>2022-05-18T14:05:09.000Z</published>
    <updated>2022-05-18T15:49:01.439Z</updated>
    
    <content type="html"><![CDATA[<h3 id="一、Github-Pages-是什么？"><a href="#一、Github-Pages-是什么？" class="headerlink" title="一、Github Pages 是什么？"></a>一、Github Pages 是什么？</h3><p>GitHub 是一个面向开源及私有软件项目的托管平台，因为只支持Git作为唯一的版本库格式进行托管，故名<em>GitHub</em>。</p><p><em>GitHub</em> 于2008年4月10日正式上线，除了<a href="https://baike.baidu.com/item/Git/12647237">Git</a>代码仓库托管及基本的Web管理界面以外，还提供了订阅、讨论组、文本渲染、在线文件编辑器、协作图谱（报表）、代码片段分享（Gist）等功能。</p><p>Github Pages 是直接从 Github 存储库托管的静态网站。只需要注册一个账号就可以使用。在 GitHub Pages 官网<a href="https://pages.github.com/">pages.github</a> 也可以看到官方推荐使用 GitHub Pages 搭建博客的教程。</p><p>GitHub Pages 服务器在国外，访问速度并不高，所以也可以选择国内与其相似功能的 Gitee Pages。</p><h3 id="二、准备"><a href="#二、准备" class="headerlink" title="二、准备"></a>二、准备</h3><p>要提前注册好自己的账号呀！</p><h4 id="1、注册-GitHub-账号"><a href="#1、注册-GitHub-账号" class="headerlink" title="1、注册 GitHub 账号"></a>1、注册 GitHub 账号</h4><p>打开 GitHub 官网：<a href="https://github.com/">github.com</a></p><p>在 GitHub 官网注册一个账号（点击右上角的“Sign up”,注册，填写用户名、密码、邮箱。点击注册后会发送一封验证邮件，登录邮箱验证即可）：</p><img src="../images/(2)GitHub Pages/1.png" style="zoom:60%;" /><img src="../images/(2)GitHub Pages/2.png" style="zoom:60%;" /><p>学生可以申请学生开发包，享受部分开发工具免费使用。</p><img src="../images/(2)GitHub Pages/3.png" style="zoom:60%;" /><h4 id="2、创建-GitHub-Pages-仓库"><a href="#2、创建-GitHub-Pages-仓库" class="headerlink" title="2、创建 GitHub Pages 仓库"></a>2、创建 GitHub Pages 仓库</h4><p>点击上方“Sign in”登录，点击左上角的 “new” 新建仓库。进入如下界面：</p><p>因为每个 GitHub 账户只能建立一个 GitHub Pages 界面，所以 Repository name 必须填&lt;用户名&gt;.github.io，否则就会建立一个普通仓库，GitHub Pages 功能不会生效。比如用户名是xxx，Repository name 这里就填xxx.github.io，不知道用户名是哪个，可以点击页面右上角头像，看到第一行“Signed in as xxx”字样， xxx即为这里的用户名。</p><p>Description 填写仓库描述，比如 jacksparrow’s blog等，可不填。</p><p>注意勾选 Public ，否则 GitHub Pages 功能不会生效。建议勾选 Add a README file，会自动生成一个 readme.md文件。</p><p>最后点击Create repository创建仓库。</p><img src="../images/(2)GitHub Pages/4.png" style="zoom:60%;" /><img src="../images/(2)GitHub Pages/5.png" style="zoom:60%;" /><h4 id="3、测试-Github-Pages-页面"><a href="#3、测试-Github-Pages-页面" class="headerlink" title="3、测试 Github Pages 页面"></a>3、测试 Github Pages 页面</h4><p>创建好 GitHub Pages 仓库后，可以写一个静态网页测试一下能否访问 GitHub Pages 服务。</p><p>选择“Commit new file”提交到仓库：</p><p><img src="/"><img src="../images/(2)GitHub Pages/6.png" alt="6" style="zoom:60%;" /></p><img src="../images/(2)GitHub Pages/7.png" style="zoom:60%;" /><img src="../images/(2)GitHub Pages/8.png" style="zoom:60%;" /><p>然后打开一个新的网页，输入网址：https:&#x2F;&#x2F;&lt;用户名&gt;.github.io，就可以看到刚刚创建的网页了。说明 Github Pages 服务正常。</p><img src="../images/(2)GitHub Pages/9.png" style="zoom:60%;" /><h3 id="三、-GitHub-Pages-发布"><a href="#三、-GitHub-Pages-发布" class="headerlink" title="三、 GitHub Pages 发布"></a>三、 GitHub Pages 发布</h3><p>我们现在可以看到提交的测试静态网页已经可以看到，下面就是将 Hexo 框架部署。</p><h4 id="1、配置-Git-参数"><a href="#1、配置-Git-参数" class="headerlink" title="1、配置 Git 参数"></a>1、配置 Git 参数</h4><p>在博客根目录下，右键，打开 “ Git Bash Here”</p><p>配置用户名和邮箱，用于 Git 提交时身份识别。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># username 和 username@xxx.com 是注册 GitHub 时的用户名和邮箱</span><br><span class="line">git config --global user.name &quot;username&quot;</span><br><span class="line">git config --global user.email &quot;username@XXX.com&quot;</span><br></pre></td></tr></table></figure><p><img src="/../images/(2">GitHub Pages&#x2F;11.png)</p><p>接下来生成 SSH Keys，用于 Git 提交时的权限控制和加密，本地根据 RSA 算法生成公私密钥对，然后将公钥添加到 GitHub 上，本机就可以提交代码到自己的 GitHub 库了。这个是根据当前使用的电脑的一些信息生成的，所以换电脑提交时要重新生成并添加。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 输入下方命令，回车三次，到结束</span><br><span class="line"># username@xxx.com 是注册 GitHub 时的邮箱</span><br><span class="line">ssh-keygen -t rsa -C &quot;username@xxx.com&quot;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="/../images/(2">GitHub Pages&#x2F;12.png)</p><p>接着输入下方命令，查看公钥内容（是一个以 ssh-rsa 开头，以邮箱结尾的长字符串）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># cat后面的路径就是上图中的公钥文件路径，直接复制过来就可以</span><br><span class="line">cat /c/Users/XXX/.ssh/id_rsa.pub</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="/../images/(2">GitHub Pages&#x2F;13.png)</p><p>复制公钥内容（在 Git Bash 中，选中字段再松开鼠标就会将内容自动复制到剪贴板，单击鼠标左键可以粘贴）；</p><p>打开自己的 GitHub 主页，点击右上角的头像，点击“Settings” —&gt; “SSH and GPG keys”</p><img src="../images/(2)GitHub Pages/14.png" style="zoom:60%;" /><p>然后点击 “new SSH key”</p><p><img src="/../images/(2">GitHub Pages&#x2F;15.png)</p><p>Title 自己定义的名字， Key 填写已复制的公钥内容，然后点击 “Add SSH key”。</p><p><img src="/../images/(2">GitHub Pages&#x2F;16.png)</p><p>可以在官网看到配置的文档相关步骤：</p><p><img src="/../images/(2">GitHub Pages&#x2F;17.png)</p><p>最后测试连通一下，看一下 Git 参数是否配置成功。结果中出现 <em>用户名</em> 和 <em>successfully</em> 说明配置成功。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 直接执行下方命令，询问是否连接，输入---yes</span><br><span class="line">ssh -T git@github.com</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="/../images/(2">GitHub Pages&#x2F;18.png)</p><h4 id="2、安装-Hexo-发布插件"><a href="#2、安装-Hexo-发布插件" class="headerlink" title="2、安装 Hexo 发布插件"></a>2、安装 Hexo 发布插件</h4><p>在博客根目录下，右键，打开 “ Git Bash Here”</p><p>输入下面的命令，安装<code>hexo-deployer-git</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 这个插件用于把生成好的静态网页上传到 GitHub Pages 仓库</span><br><span class="line">npm install hexo-deployer-git</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="/../images/(2">GitHub Pages&#x2F;19.png)</p><h4 id="3、发布-啦"><a href="#3、发布-啦" class="headerlink" title="3、发布 啦"></a>3、发布 啦</h4><p>终于到最后的一步啦！完成这最后一步配置，我们的博客就发布成功啦！！！</p><p>在博客根目录下，找到 “_config.yaml” (E:\MyBlog_config.yaml)，拉到最后一行，修改下面配置（<em>记得保存哦</em>）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># 其中 xxxxxx 是前面多次用到的你的GitHub用户名</span><br><span class="line"># 若文件中没有下方配置自行添加</span><br><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: git@github.com:xxxxxx/xxxxxx.github.io.git</span><br><span class="line">  branch: main</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>到这里我们执行最后一步，和输入下方命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 注意最后变成d了，原来的s表示服务起在本地，现在的d表示部署在远端</span><br><span class="line">hexo g &amp;&amp; hexo d</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>待命令执行完毕，打开浏览器，输入网址<code>https://你的用户名.github.io</code>，可以看到一个和第一篇中本地部署的一模一样的博客出现了。</p><ul><li>如果命令执行完后在验证博客是否部署成功时并没有显示，先不要着急哦，在确保自己前面没有配置错误，没有误写的情况下，要耐心等待一会，会由于网站自身访问本来就慢有关，可以稍稍再多等一下下，或者在浏览器从新打开一个无痕网页。</li></ul><p>如下图我们就可以访问到了！ https:&#x2F;&#x2F;用户名.github.io</p><p><img src="/../images/(2">GitHub Pages&#x2F;20.png)</p><h3 id="四、总结"><a href="#四、总结" class="headerlink" title="四、总结"></a>四、总结</h3><p>到这里我们的个人博客就搭建好了，通过网址别人也可以一起访问了。其实搭建博客不止可以用 Hexo 也可以用 WordPress 、 Python 等，我们可以根据其他资料内容来搭建 GitHub 博客。</p><p>将博客搭建好部署上去的那一瞬间可以说是“今朝欢乐便无愁”，好了，我们的博客搭建到这里就收锣罢鼓了，我们后续的学习分享再见！！！</p><p><font color='red'>&#10084;<span> </span></font>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;一、Github-Pages-是什么？&quot;&gt;&lt;a href=&quot;#一、Github-Pages-是什么？&quot; class=&quot;headerlink&quot; title=&quot;一、Github Pages 是什么？&quot;&gt;&lt;/a&gt;一、Github Pages 是什么？&lt;/h3&gt;&lt;p&gt;Gi</summary>
      
    
    
    
    <category term="博客搭建" scheme="http://example.com/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
    
    <category term="博客搭建，Hexo" scheme="http://example.com/tags/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%EF%BC%8CHexo/"/>
    
  </entry>
  
  <entry>
    <title>（一）在GitHub搭建自己的博客---本地</title>
    <link href="http://example.com/2022/05/11/%EF%BC%88%E4%B8%80%EF%BC%89%E5%9C%A8GitHub%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2-%E6%9C%AC%E5%9C%B0/"/>
    <id>http://example.com/2022/05/11/%EF%BC%88%E4%B8%80%EF%BC%89%E5%9C%A8GitHub%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2-%E6%9C%AC%E5%9C%B0/</id>
    <published>2022-05-11T13:18:13.000Z</published>
    <updated>2022-05-11T13:19:24.580Z</updated>
    
    <content type="html"><![CDATA[<h3 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h3><p>1、安装Hexo 依赖环境：Node.js</p><p>2、Hexo 环境安装：Git</p><p>3、安装Hexo</p><p>4、更换Hexo 博客主题</p><p>5、发布本地博客第一篇文章</p><h3 id="一、安装Hexo-依赖环境：Node-js"><a href="#一、安装Hexo-依赖环境：Node-js" class="headerlink" title="一、安装Hexo 依赖环境：Node.js"></a>一、安装Hexo 依赖环境：Node.js</h3><p>Node.js是一个基于Chrome V8引擎的JavaScript运行环境。</p><p>Node.js是一套JavaScript运行环境，用来支持javaScript代码的执行。也就是安装了Node.js环境，就可以不用依赖浏览器就运行js代码。</p><p>（<em>博客不是必须用Node.js来开发</em>）</p><h4 id="1、下载Node-js"><a href="#1、下载Node-js" class="headerlink" title="1、下载Node.js"></a>1、下载Node.js</h4><p>Node.js中文官网：<a href="https://nodejs.org/zh-cn/">https://nodejs.org/zh-cn/</a></p><p>如下图首页：直接下载安装即可，我选择了16.15.0稳定版。</p><img src="../images/a/1.png" alt="Node.js官网首页" style="zoom:60%;" /><h4 id="2、安装Node-js"><a href="#2、安装Node-js" class="headerlink" title="2、安装Node.js"></a>2、安装Node.js</h4><p>如图：下载好安装包后双击：</p><img src="../images/a/2.png" style="zoom:60%;" /><p>点击“Next”</p><img src="../images/a/3.png" alt="3" style="zoom:60%;" /><p>勾选“同意”</p><img src="../images/a/4.png" alt="4" style="zoom:60%;" /><p>选择安装路径：</p><img src="../images/a/5.png" alt="5" style="zoom:60%;" /><p>继续点击“Next”</p><img src="../images/a/6.png" alt="6" style="zoom:60%;" /><p>不用勾选，直接点击“Next”</p><img src="../images/a/7.png" alt="7" style="zoom:60%;" /><p>选择“安装”</p><img src="../images/a/8.png" alt="8" style="zoom:60%;" /><img src="../images/a/9.png" alt="9" style="zoom:60%;" /><h4 id="3、测试Node-js是否安装成功"><a href="#3、测试Node-js是否安装成功" class="headerlink" title="3、测试Node.js是否安装成功"></a>3、测试Node.js是否安装成功</h4><p>安装完成后，win+R键打开运行框，输入cmd，然后输入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm -v</span><br></pre></td></tr></table></figure><p> 回车，出现版本信息则说明安装成功。</p><p><img src="/../images/a/10.png" alt="10"></p><p><img src="/../images/a/11.png" alt="11"></p><h3 id="二、Hexo-环境安装：Git"><a href="#二、Hexo-环境安装：Git" class="headerlink" title="二、Hexo 环境安装：Git"></a>二、Hexo 环境安装：Git</h3><p>Git 是一个开源的分布式版本控制系统，可以有效、高速地处理从很小到非常大的项目版本管理。</p><h4 id="1、下载-Git"><a href="#1、下载-Git" class="headerlink" title="1、下载 Git"></a>1、下载 Git</h4><p>官网：<a href="https://git-scm.com/">https://git-scm.com/</a></p><p>打开官网下载安装包即可，但是下载会非常慢。</p><img src="../images/a/12.png" style="zoom:60%;" /><p><img src="/../images/a/13.png"></p><p>这个网站下载很快，也可以看到很多版本<a href="https://npm.taobao.org/mirrors/git-for-windows/">https://npm.taobao.org/mirrors/git-for-windows/</a></p><h4 id="2、安装-Git"><a href="#2、安装-Git" class="headerlink" title="2、安装 Git"></a>2、安装 Git</h4><p>双击下载后的 Git，开始安装：</p><img src="../images/a/14.png" style="zoom:60%;" /><p>选择安装目录，可点击“Browse…”更换目录，修改完成后，点击“Next”</p><img src="../images/a/15.png" style="zoom:60%;" /><p>选择安装组件（根据自己需求勾选相关组件），点击“Next”：</p><img src="../images/a/16.png" style="zoom:60%;" /><p>”Git“可以改为其他名字，也可选择“Browse…”选择其他文件夹，然后点击“Next”</p><img src="../images/a/17.png" style="zoom:60%;" /><p>选择 Git 默认编辑器</p><p>Git 安装程序里面内置了 10 种编辑器默认的是 Vim </p><img src="../images/a/18.png" style="zoom:60%;" /><p>初始化项目的主干名字：一般选择“Let Git decide”的话默认“master”，也可以选择“Override …”写入其他名字，然后点击“Next”</p><img src="../images/a/19.png" style="zoom:60%;" /><p>调整path环境变量，然后点击“Next”：</p><ul><li>第一种：只能通过 Git Bash 使用 Git。</li><li>第二种：支持命令行和第三方软件使用 Git（<em>新手推荐</em>）。</li><li>第三种：从命令提示符使用 Git 和其可选的工具。</li></ul><img src="../images/a/20.png" style="zoom:60%;" /><p>选择SSH可执行文件，然后点击“Next”：</p><ul><li>第一种：Git 自带</li><li>第二种：使用外部OpenSSHell</li></ul><img src="../images/a/21.png" style="zoom:60%;" /><p>选择https后端传输，然后点击“Next”</p><img src="../images/a/22.png" style="zoom:60%;" /><p>配置行尾符号转换，然后点击“Next”</p><ul><li>第一种：Windows 样式，提交 Unix 样式的行尾</li><li>第二种：按照原样签出，提交 Unix 样式的行尾</li><li>第三种：按照原样签出，按照原样提交</li></ul><img src="../images/a/23.png" style="zoom:60%;" /><p>配置终端模拟器与 Git Bash 一起使用</p><img src="../images/a/24.png" style="zoom:60%;" /><p>选择默认的 “Git pull” 行为：</p><p>Git pull 是获取最新的远程仓库分支到本地，并与本地分支合并</p><p>默认选择第一项</p><img src="../images/a/25.png" style="zoom:60%;" /><p>选择一个凭证帮助程序，然点击“Next”</p><p>（None—不选择凭证助手）</p><img src="../images/a/26.png" style="zoom:60%;" /><p>启用文件系统缓存</p><img src="../images/a/27.png" style="zoom:60%;" /><p>配置实验性选项</p><img src="../images/a/28.png" style="zoom:60%;" /><p>选择安装</p><img src="../images/a/29.png" style="zoom:60%;" /><img src="../images/a/30.png" style="zoom:60%;" /><h4 id="3、查看是否安装成功"><a href="#3、查看是否安装成功" class="headerlink" title="3、查看是否安装成功"></a>3、查看是否安装成功</h4><p>在桌面空白处点击右键，多出如下两个选项。</p><p><img src="/../images/a/31.png"></p><p>Git 安装完成后，通过 “Git Bash here” 就可以打开，输入 git –version回车，出现版本号则说明安装成功。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git --version</span><br></pre></td></tr></table></figure><p><img src="/../images/a/32.png"></p><h3 id="三、安装-Hexo"><a href="#三、安装-Hexo" class="headerlink" title="三、安装 Hexo"></a>三、安装 Hexo</h3><h4 id="1、本地安装-Hexo"><a href="#1、本地安装-Hexo" class="headerlink" title="1、本地安装 Hexo"></a>1、本地安装 Hexo</h4><p>首先在本地新建一个空文件夹，用来存放 Hexo 的文件和今后写的博客（<em>注意不要出现中文路劲，避免出现问题</em>），我在E盘根目录创建的文件夹— “MyBlog” </p><p><img src="/../images/a/33.png"></p><p>然后进入新建的文件夹，选择 “Git Bash here” ，输入下方命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#安装 Hexo 框架</span><br><span class="line">npm install -g hexo-cli    //-g表示安装全局模块</span><br><span class="line">#初始化文件夹</span><br><span class="line">hexo init</span><br><span class="line">#安装 Hexo 依赖包</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure><p><img src="/../images/a/34.png">!   </p><p><img src="/../images/a/35.png"></p><h4 id="2、本地博客效果"><a href="#2、本地博客效果" class="headerlink" title="2、本地博客效果"></a>2、本地博客效果</h4><p>前三条命令执行成功， Hexo 框架就搭建好了</p><p>在 “Git Bash here” 命令行窗口中，执行下方命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br><span class="line">#生成静态网站</span><br><span class="line">hexo s</span><br><span class="line">#启动服务器</span><br></pre></td></tr></table></figure><p><img src="/../images/a/36.png"></p><p><img src="/../images/a/37.png"></p><p>然后打开浏览器，输入 <a href="http://localhost:4000/">http://localhost:4000/</a> ，就可以看见 Hexo 博客搭建的示例了。（<em>展示的默认主题</em>）</p><p><img src="/../images/a/38.png"></p><p><img src="/../images/a/39.png" alt="39"></p><h3 id="四、更换-Hexo-博客主题"><a href="#四、更换-Hexo-博客主题" class="headerlink" title="四、更换 Hexo 博客主题"></a>四、更换 Hexo 博客主题</h3><h4 id="1、如何找到主题"><a href="#1、如何找到主题" class="headerlink" title="1、如何找到主题"></a>1、如何找到主题</h4><ol><li>官方网站可以找到主题页，进入可供选择  <a href="https://hexo.io/zh-cn/">https://hexo.io/zh-cn/</a></li></ol><img src="../images/a/40.png" style="zoom:60%;" /><p>2.GitHub 搜索—在GitHub官网可搜索相关主题名称</p><p>3.网上搜索，直接搜索 “Hexo”主题，相关词汇，就可以看到别人推荐的主题。</p><h4 id="2、主题更换"><a href="#2、主题更换" class="headerlink" title="2、主题更换"></a>2、主题更换</h4><p>以  <strong>ayer</strong> 为例，可以去参考 <a href="https://shen-yu.gitee.io/2019/ayer/">https://shen-yu.gitee.io/2019/ayer/</a></p><p>在 Hexo 农科根目录下（D:\MyBlog ）下，<code>右键执行</code>Git Bash here</p><p>然后执行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 下载主题仓库到 themes 文件夹， git clone &lt;仓库地址&gt; themes/&lt;主题名&gt; </span><br><span class="line">git clone https://github.com/Shen-Yu/hexo-theme-ayer.git themes/ayer</span><br><span class="line"></span><br><span class="line">#仓库地址可以在主题的 Github 主页获取到</span><br><span class="line"></span><br></pre></td></tr></table></figure><img src="../images/a/41.png" style="zoom:60%;" /><p><img src="/../images/a/57.png"></p><p>当我们再打开MyBlog文件夹下“themes”的文件可以看到多了 ayer 文件夹</p><p><img src="/../images/a/58.png"></p><p>然后用记事本打开根目录下的“_config.yml”文件（E:\MyBlog \ _cofig.yml），找到 theme 标签，默认是“landscape”主题，把它的名字改为要更换的主题的名字“ayer”</p><img src="../images/a/50.png" style="zoom:60%;" /><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># Extensions</span><br><span class="line">## Plugins: https://hexo.io/plugins/</span><br><span class="line">## Themes: https://hexo.io/themes/</span><br><span class="line">theme: ayer</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 清理 &amp;&amp; 生成 &amp;&amp; 启动</span><br><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo s</span><br></pre></td></tr></table></figure><img src="../images/a/59.png" style="zoom:60%;" /><p>再次打来浏览器，打开网址 <a href="http://localhost:4000/">http://localhost:4000</a>  ，可以看到博客已换上该主题</p><img src="../images/a/60.png" style="zoom:60%;" /><h4 id="3、修改主题"><a href="#3、修改主题" class="headerlink" title="3、修改主题"></a>3、修改主题</h4><p>更换好主题后，博主的名字、图片、背景、首页以及点击特效等可以进行修改。</p><p>Hexo 的配置基本都在根目录下的“_config.yml” 文件，对于给文件的内容解释在 Hexo 官网看到详细讲解。（<a href="https://hexo.io/zh-cn/docs/%EF%BC%89">https://hexo.io/zh-cn/docs/）</a></p><p>对于 <strong>ayer</strong> 主题中的细致修改在第三方主题根目录下（”E:\MyBlog\themes\ayer\ _config.yml“）文件，细致的修改内容可以看<a href="https://shen-yu.gitee.io/2019/ayer/">https://shen-yu.gitee.io/2019/ayer/</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># Site  ---博客标题</span><br><span class="line">title: 三里春风</span><br><span class="line">subtitle: &#x27;&#x27;</span><br><span class="line">description: &#x27;&#x27;</span><br><span class="line">keywords:</span><br><span class="line"># 博客作者</span><br><span class="line">author: 糖葫芦呀</span><br><span class="line"># 网站语言，这里我选择中文</span><br><span class="line">language: zh-CN</span><br><span class="line">timezone: &#x27;&#x27;</span><br></pre></td></tr></table></figure><p>参考 <strong>ayer</strong> 的文档，修改（<em>E:\MyBlog\themes\ayer 下的_config.yml</em>）：</p><p>修改侧边栏</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># 侧边栏菜单</span><br><span class="line">menu:</span><br><span class="line">  主页: /</span><br><span class="line">  归档: /archives</span><br><span class="line">  分类: /categories</span><br><span class="line">  标签: /tags</span><br><span class="line">  关于我: about</span><br></pre></td></tr></table></figure><p>修改滚动标题显示：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">subtitle:</span><br><span class="line">  enable: true # 是否开启动效</span><br><span class="line">  text:  于高山之巅，方见大河奔涌</span><br><span class="line">  text2:  于群峰之上，更觉乘风浩荡</span><br><span class="line">  text3: 山高水长，一切都是刚刚好</span><br><span class="line">  </span><br></pre></td></tr></table></figure><p>修改网站图标和侧栏图标</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">favicon: /favicon1.ico</span><br><span class="line">logo: /images/favicon.ico</span><br></pre></td></tr></table></figure><p>修改封面背景图</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cover:</span><br><span class="line">  enable: true</span><br><span class="line">  path: /images/l6.jpg </span><br><span class="line">  logo: false #/images/ayer.svg，如果不要直接设置成false</span><br></pre></td></tr></table></figure><p>关闭主题作者的打赏</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">reward_type: 0</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="4、查看修改效果"><a href="#4、查看修改效果" class="headerlink" title="4、查看修改效果"></a>4、查看修改效果</h4><p>大致文档修改已完成，更改完成后查看修改效果</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g &amp;&amp; hexo s</span><br></pre></td></tr></table></figure><p><img src="/../images/a/52.png"></p><h3 id="五、发布本地博客第一篇文章"><a href="#五、发布本地博客第一篇文章" class="headerlink" title="五、发布本地博客第一篇文章"></a>五、发布本地博客第一篇文章</h3><p>本地博客搭建完成，里面有一篇示例的 “Hello Word” 文章</p><h4 id="1、写出第一篇文章"><a href="#1、写出第一篇文章" class="headerlink" title="1、写出第一篇文章"></a>1、写出第一篇文章</h4><p>在根目录下单击右键，选择 “Git Bash here” ，输入下方命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo new &quot;我的第一篇博客&quot;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>运行完成后，在（E:\MyBlog\source_posts）下可以看到 “我的第一篇博客.md” 文件，这就是新生成的博客文章，该文件可以用 “Typora” 打开并编辑。</p><p>先用 “Ctrl  +  C ” 停止服务器，在执行 “hexo g &amp;&amp; hexo s” 重新部署，刷新  <a href="http://localhost:4000/">http://localhost:4000/</a>  ，就可以看到博客上多了一篇文章</p><img src="../images/a/61.png" style="zoom:60%;" /><h4 id="2、更改日期文档配置"><a href="#2、更改日期文档配置" class="headerlink" title="2、更改日期文档配置"></a>2、更改日期文档配置</h4><p>在根目录配置文件（E:\MyBlog_config.yml）文件中 new_post_name 参数，这样新建文章时文件会自动加上年月日的信息。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">new_post_name: title.md # File name of new posts</span><br><span class="line"></span><br><span class="line"># 想要下次创建文件自动加上日期信息</span><br><span class="line">new_post_name: :year-:month-:day-:title.md</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="六、总结"><a href="#六、总结" class="headerlink" title="六、总结"></a>六、总结</h3><p>到这里本地博客就已经搭建成功，之后就可以部署在 GitHub 远程服务器上了。一定要注意文档编写时，关键字冒号后面要加空格，而且一定要区分全角和半角，不然是没有效果显示的。</p><h3 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h3><p><a href="https://yushuaige.github.io/">https://yushuaige.github.io/</a></p><p><a href="https://shen-yu.gitee.io/2019/ayer/">https://shen-yu.gitee.io/2019/ayer/</a></p><p><a href="https://blog.csdn.net/a6661314/article/details/122975744">https://blog.csdn.net/a6661314/article/details/122975744</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;环境准备&quot;&gt;&lt;a href=&quot;#环境准备&quot; class=&quot;headerlink&quot; title=&quot;环境准备&quot;&gt;&lt;/a&gt;环境准备&lt;/h3&gt;&lt;p&gt;1、安装Hexo 依赖环境：Node.js&lt;/p&gt;
&lt;p&gt;2、Hexo 环境安装：Git&lt;/p&gt;
&lt;p&gt;3、安装Hexo&lt;/</summary>
      
    
    
    
    <category term="博客搭建" scheme="http://example.com/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
    
    <category term="博客搭建，hexo" scheme="http://example.com/tags/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%EF%BC%8Chexo/"/>
    
  </entry>
  
  <entry>
    <title>我的第一篇博客</title>
    <link href="http://example.com/2022/05/08/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/"/>
    <id>http://example.com/2022/05/08/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/</id>
    <published>2022-05-08T01:07:32.000Z</published>
    <updated>2022-05-08T02:16:57.597Z</updated>
    
    <content type="html"><![CDATA[<h3 id="hello-world-·-一个后来才知道努力地孩子的第一篇测试博客"><a href="#hello-world-·-一个后来才知道努力地孩子的第一篇测试博客" class="headerlink" title="hello-world-·-一个后来才知道努力地孩子的第一篇测试博客"></a>hello-world-·-一个后来才知道努力地孩子的第一篇测试博客</h3><p><font color='red'>&#10084;<span> </span></font><font>&emsp;<span> 人间烟火，山河远阔</span></font><span> </span></p><p>&emsp; 一岁有一岁的味道，一站有一站的风景，花会沿路盛开    以后的路也是，希望我们都在各自的未来里闪闪发光！     <font color='#FFD700' size=4>&#9733;</font></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;hello-world-·-一个后来才知道努力地孩子的第一篇测试博客&quot;&gt;&lt;a href=&quot;#hello-world-·-一个后来才知道努力地孩子的第一篇测试博客&quot; class=&quot;headerlink&quot; title=&quot;hello-world-·-一个后来才知道努力地</summary>
      
    
    
    
    
    <category term="test" scheme="http://example.com/tags/test/"/>
    
  </entry>
  
</feed>
