{"meta":{"title":"三里春风","subtitle":"","description":"","author":"Stella","url":"http://example.com","root":"/"},"pages":[{"title":"tags","date":"2022-05-07T14:26:59.000Z","updated":"2022-05-08T00:41:17.047Z","comments":true,"path":"tags/index.html","permalink":"http://example.com/tags/index.html","excerpt":"","text":""},{"title":"categories","date":"2022-05-07T14:21:26.000Z","updated":"2022-05-07T14:23:31.449Z","comments":true,"path":"categories/index.html","permalink":"http://example.com/categories/index.html","excerpt":"","text":""},{"title":"about","date":"2022-05-08T00:45:50.000Z","updated":"2022-05-08T00:46:26.065Z","comments":true,"path":"about/index.html","permalink":"http://example.com/about/index.html","excerpt":"","text":""}],"posts":[{"title":"(二)在GitHub搭建自己的博客---基于GitHub Pages","slug":"二-在GitHub搭建自己的博客-基于GitHub-Pages","date":"2022-05-18T14:05:09.000Z","updated":"2022-05-18T15:49:01.439Z","comments":true,"path":"2022/05/18/二-在GitHub搭建自己的博客-基于GitHub-Pages/","link":"","permalink":"http://example.com/2022/05/18/%E4%BA%8C-%E5%9C%A8GitHub%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2-%E5%9F%BA%E4%BA%8EGitHub-Pages/","excerpt":"","text":"一、Github Pages 是什么？GitHub 是一个面向开源及私有软件项目的托管平台，因为只支持Git作为唯一的版本库格式进行托管，故名GitHub。 GitHub 于2008年4月10日正式上线，除了Git代码仓库托管及基本的Web管理界面以外，还提供了订阅、讨论组、文本渲染、在线文件编辑器、协作图谱（报表）、代码片段分享（Gist）等功能。 Github Pages 是直接从 Github 存储库托管的静态网站。只需要注册一个账号就可以使用。在 GitHub Pages 官网pages.github 也可以看到官方推荐使用 GitHub Pages 搭建博客的教程。 GitHub Pages 服务器在国外，访问速度并不高，所以也可以选择国内与其相似功能的 Gitee Pages。 二、准备要提前注册好自己的账号呀！ 1、注册 GitHub 账号打开 GitHub 官网：github.com 在 GitHub 官网注册一个账号（点击右上角的“Sign up”,注册，填写用户名、密码、邮箱。点击注册后会发送一封验证邮件，登录邮箱验证即可）： 学生可以申请学生开发包，享受部分开发工具免费使用。 2、创建 GitHub Pages 仓库点击上方“Sign in”登录，点击左上角的 “new” 新建仓库。进入如下界面： 因为每个 GitHub 账户只能建立一个 GitHub Pages 界面，所以 Repository name 必须填&lt;用户名&gt;.github.io，否则就会建立一个普通仓库，GitHub Pages 功能不会生效。比如用户名是xxx，Repository name 这里就填xxx.github.io，不知道用户名是哪个，可以点击页面右上角头像，看到第一行“Signed in as xxx”字样， xxx即为这里的用户名。 Description 填写仓库描述，比如 jacksparrow’s blog等，可不填。 注意勾选 Public ，否则 GitHub Pages 功能不会生效。建议勾选 Add a README file，会自动生成一个 readme.md文件。 最后点击Create repository创建仓库。 3、测试 Github Pages 页面创建好 GitHub Pages 仓库后，可以写一个静态网页测试一下能否访问 GitHub Pages 服务。 选择“Commit new file”提交到仓库： 然后打开一个新的网页，输入网址：https:&#x2F;&#x2F;&lt;用户名&gt;.github.io，就可以看到刚刚创建的网页了。说明 Github Pages 服务正常。 三、 GitHub Pages 发布我们现在可以看到提交的测试静态网页已经可以看到，下面就是将 Hexo 框架部署。 1、配置 Git 参数在博客根目录下，右键，打开 “ Git Bash Here” 配置用户名和邮箱，用于 Git 提交时身份识别。 123# username 和 username@xxx.com 是注册 GitHub 时的用户名和邮箱git config --global user.name &quot;username&quot;git config --global user.email &quot;username@XXX.com&quot; GitHub Pages&#x2F;11.png) 接下来生成 SSH Keys，用于 Git 提交时的权限控制和加密，本地根据 RSA 算法生成公私密钥对，然后将公钥添加到 GitHub 上，本机就可以提交代码到自己的 GitHub 库了。这个是根据当前使用的电脑的一些信息生成的，所以换电脑提交时要重新生成并添加。 1234# 输入下方命令，回车三次，到结束# username@xxx.com 是注册 GitHub 时的邮箱ssh-keygen -t rsa -C &quot;username@xxx.com&quot; GitHub Pages&#x2F;12.png) 接着输入下方命令，查看公钥内容（是一个以 ssh-rsa 开头，以邮箱结尾的长字符串） 123# cat后面的路径就是上图中的公钥文件路径，直接复制过来就可以cat /c/Users/XXX/.ssh/id_rsa.pub GitHub Pages&#x2F;13.png) 复制公钥内容（在 Git Bash 中，选中字段再松开鼠标就会将内容自动复制到剪贴板，单击鼠标左键可以粘贴）； 打开自己的 GitHub 主页，点击右上角的头像，点击“Settings” —&gt; “SSH and GPG keys” 然后点击 “new SSH key” GitHub Pages&#x2F;15.png) Title 自己定义的名字， Key 填写已复制的公钥内容，然后点击 “Add SSH key”。 GitHub Pages&#x2F;16.png) 可以在官网看到配置的文档相关步骤： GitHub Pages&#x2F;17.png) 最后测试连通一下，看一下 Git 参数是否配置成功。结果中出现 用户名 和 successfully 说明配置成功。 123# 直接执行下方命令，询问是否连接，输入---yesssh -T git@github.com GitHub Pages&#x2F;18.png) 2、安装 Hexo 发布插件在博客根目录下，右键，打开 “ Git Bash Here” 输入下面的命令，安装hexo-deployer-git 123# 这个插件用于把生成好的静态网页上传到 GitHub Pages 仓库npm install hexo-deployer-git GitHub Pages&#x2F;19.png) 3、发布 啦终于到最后的一步啦！完成这最后一步配置，我们的博客就发布成功啦！！！ 在博客根目录下，找到 “_config.yaml” (E:\\MyBlog_config.yaml)，拉到最后一行，修改下面配置（记得保存哦） 1234567# 其中 xxxxxx 是前面多次用到的你的GitHub用户名# 若文件中没有下方配置自行添加deploy: type: git repo: git@github.com:xxxxxx/xxxxxx.github.io.git branch: main 到这里我们执行最后一步，和输入下方命令 123# 注意最后变成d了，原来的s表示服务起在本地，现在的d表示部署在远端hexo g &amp;&amp; hexo d 待命令执行完毕，打开浏览器，输入网址https://你的用户名.github.io，可以看到一个和第一篇中本地部署的一模一样的博客出现了。 如果命令执行完后在验证博客是否部署成功时并没有显示，先不要着急哦，在确保自己前面没有配置错误，没有误写的情况下，要耐心等待一会，会由于网站自身访问本来就慢有关，可以稍稍再多等一下下，或者在浏览器从新打开一个无痕网页。 如下图我们就可以访问到了！ https:&#x2F;&#x2F;用户名.github.io GitHub Pages&#x2F;20.png) 四、总结到这里我们的个人博客就搭建好了，通过网址别人也可以一起访问了。其实搭建博客不止可以用 Hexo 也可以用 WordPress 、 Python 等，我们可以根据其他资料内容来搭建 GitHub 博客。 将博客搭建好部署上去的那一瞬间可以说是“今朝欢乐便无愁”，好了，我们的博客搭建到这里就收锣罢鼓了，我们后续的学习分享再见！！！ &#10084;","categories":[{"name":"博客搭建","slug":"博客搭建","permalink":"http://example.com/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"}],"tags":[{"name":"博客搭建，Hexo","slug":"博客搭建，Hexo","permalink":"http://example.com/tags/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%EF%BC%8CHexo/"}]},{"title":"（一）在GitHub搭建自己的博客---本地","slug":"（一）在GitHub搭建自己的博客-本地","date":"2022-05-11T13:18:13.000Z","updated":"2022-05-11T13:19:24.580Z","comments":true,"path":"2022/05/11/（一）在GitHub搭建自己的博客-本地/","link":"","permalink":"http://example.com/2022/05/11/%EF%BC%88%E4%B8%80%EF%BC%89%E5%9C%A8GitHub%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2-%E6%9C%AC%E5%9C%B0/","excerpt":"","text":"环境准备1、安装Hexo 依赖环境：Node.js 2、Hexo 环境安装：Git 3、安装Hexo 4、更换Hexo 博客主题 5、发布本地博客第一篇文章 一、安装Hexo 依赖环境：Node.jsNode.js是一个基于Chrome V8引擎的JavaScript运行环境。 Node.js是一套JavaScript运行环境，用来支持javaScript代码的执行。也就是安装了Node.js环境，就可以不用依赖浏览器就运行js代码。 （博客不是必须用Node.js来开发） 1、下载Node.jsNode.js中文官网：https://nodejs.org/zh-cn/ 如下图首页：直接下载安装即可，我选择了16.15.0稳定版。 2、安装Node.js如图：下载好安装包后双击： 点击“Next” 勾选“同意” 选择安装路径： 继续点击“Next” 不用勾选，直接点击“Next” 选择“安装” 3、测试Node.js是否安装成功安装完成后，win+R键打开运行框，输入cmd，然后输入 1npm -v 回车，出现版本信息则说明安装成功。 二、Hexo 环境安装：GitGit 是一个开源的分布式版本控制系统，可以有效、高速地处理从很小到非常大的项目版本管理。 1、下载 Git官网：https://git-scm.com/ 打开官网下载安装包即可，但是下载会非常慢。 这个网站下载很快，也可以看到很多版本https://npm.taobao.org/mirrors/git-for-windows/ 2、安装 Git双击下载后的 Git，开始安装： 选择安装目录，可点击“Browse…”更换目录，修改完成后，点击“Next” 选择安装组件（根据自己需求勾选相关组件），点击“Next”： ”Git“可以改为其他名字，也可选择“Browse…”选择其他文件夹，然后点击“Next” 选择 Git 默认编辑器 Git 安装程序里面内置了 10 种编辑器默认的是 Vim 初始化项目的主干名字：一般选择“Let Git decide”的话默认“master”，也可以选择“Override …”写入其他名字，然后点击“Next” 调整path环境变量，然后点击“Next”： 第一种：只能通过 Git Bash 使用 Git。 第二种：支持命令行和第三方软件使用 Git（新手推荐）。 第三种：从命令提示符使用 Git 和其可选的工具。 选择SSH可执行文件，然后点击“Next”： 第一种：Git 自带 第二种：使用外部OpenSSHell 选择https后端传输，然后点击“Next” 配置行尾符号转换，然后点击“Next” 第一种：Windows 样式，提交 Unix 样式的行尾 第二种：按照原样签出，提交 Unix 样式的行尾 第三种：按照原样签出，按照原样提交 配置终端模拟器与 Git Bash 一起使用 选择默认的 “Git pull” 行为： Git pull 是获取最新的远程仓库分支到本地，并与本地分支合并 默认选择第一项 选择一个凭证帮助程序，然点击“Next” （None—不选择凭证助手） 启用文件系统缓存 配置实验性选项 选择安装 3、查看是否安装成功在桌面空白处点击右键，多出如下两个选项。 Git 安装完成后，通过 “Git Bash here” 就可以打开，输入 git –version回车，出现版本号则说明安装成功。 1git --version 三、安装 Hexo1、本地安装 Hexo首先在本地新建一个空文件夹，用来存放 Hexo 的文件和今后写的博客（注意不要出现中文路劲，避免出现问题），我在E盘根目录创建的文件夹— “MyBlog” 然后进入新建的文件夹，选择 “Git Bash here” ，输入下方命令： 123456#安装 Hexo 框架npm install -g hexo-cli //-g表示安装全局模块#初始化文件夹hexo init#安装 Hexo 依赖包npm install ! 2、本地博客效果前三条命令执行成功， Hexo 框架就搭建好了 在 “Git Bash here” 命令行窗口中，执行下方命令： 1234hexo g#生成静态网站hexo s#启动服务器 然后打开浏览器，输入 http://localhost:4000/ ，就可以看见 Hexo 博客搭建的示例了。（展示的默认主题） 四、更换 Hexo 博客主题1、如何找到主题 官方网站可以找到主题页，进入可供选择 https://hexo.io/zh-cn/ 2.GitHub 搜索—在GitHub官网可搜索相关主题名称 3.网上搜索，直接搜索 “Hexo”主题，相关词汇，就可以看到别人推荐的主题。 2、主题更换以 ayer 为例，可以去参考 https://shen-yu.gitee.io/2019/ayer/ 在 Hexo 农科根目录下（D:\\MyBlog ）下，右键执行Git Bash here 然后执行 12345# 下载主题仓库到 themes 文件夹， git clone &lt;仓库地址&gt; themes/&lt;主题名&gt; git clone https://github.com/Shen-Yu/hexo-theme-ayer.git themes/ayer#仓库地址可以在主题的 Github 主页获取到 当我们再打开MyBlog文件夹下“themes”的文件可以看到多了 ayer 文件夹 然后用记事本打开根目录下的“_config.yml”文件（E:\\MyBlog \\ _cofig.yml），找到 theme 标签，默认是“landscape”主题，把它的名字改为要更换的主题的名字“ayer” 1234# Extensions## Plugins: https://hexo.io/plugins/## Themes: https://hexo.io/themes/theme: ayer 12# 清理 &amp;&amp; 生成 &amp;&amp; 启动hexo clean &amp;&amp; hexo g &amp;&amp; hexo s 再次打来浏览器，打开网址 http://localhost:4000 ，可以看到博客已换上该主题 3、修改主题更换好主题后，博主的名字、图片、背景、首页以及点击特效等可以进行修改。 Hexo 的配置基本都在根目录下的“_config.yml” 文件，对于给文件的内容解释在 Hexo 官网看到详细讲解。（https://hexo.io/zh-cn/docs/） 对于 ayer 主题中的细致修改在第三方主题根目录下（”E:\\MyBlog\\themes\\ayer\\ _config.yml“）文件，细致的修改内容可以看https://shen-yu.gitee.io/2019/ayer/ 12345678910# Site ---博客标题title: 三里春风subtitle: &#x27;&#x27;description: &#x27;&#x27;keywords:# 博客作者author: 糖葫芦呀# 网站语言，这里我选择中文language: zh-CNtimezone: &#x27;&#x27; 参考 ayer 的文档，修改（E:\\MyBlog\\themes\\ayer 下的_config.yml）： 修改侧边栏 1234567# 侧边栏菜单menu: 主页: / 归档: /archives 分类: /categories 标签: /tags 关于我: about 修改滚动标题显示： 123456subtitle: enable: true # 是否开启动效 text: 于高山之巅，方见大河奔涌 text2: 于群峰之上，更觉乘风浩荡 text3: 山高水长，一切都是刚刚好 修改网站图标和侧栏图标 12favicon: /favicon1.icologo: /images/favicon.ico 修改封面背景图 1234cover: enable: true path: /images/l6.jpg logo: false #/images/ayer.svg，如果不要直接设置成false 关闭主题作者的打赏 12reward_type: 0 4、查看修改效果大致文档修改已完成，更改完成后查看修改效果 1hexo g &amp;&amp; hexo s 五、发布本地博客第一篇文章本地博客搭建完成，里面有一篇示例的 “Hello Word” 文章 1、写出第一篇文章在根目录下单击右键，选择 “Git Bash here” ，输入下方命令： 123hexo new &quot;我的第一篇博客&quot; 运行完成后，在（E:\\MyBlog\\source_posts）下可以看到 “我的第一篇博客.md” 文件，这就是新生成的博客文章，该文件可以用 “Typora” 打开并编辑。 先用 “Ctrl + C ” 停止服务器，在执行 “hexo g &amp;&amp; hexo s” 重新部署，刷新 http://localhost:4000/ ，就可以看到博客上多了一篇文章 2、更改日期文档配置在根目录配置文件（E:\\MyBlog_config.yml）文件中 new_post_name 参数，这样新建文章时文件会自动加上年月日的信息。 12345new_post_name: title.md # File name of new posts# 想要下次创建文件自动加上日期信息new_post_name: :year-:month-:day-:title.md 六、总结到这里本地博客就已经搭建成功，之后就可以部署在 GitHub 远程服务器上了。一定要注意文档编写时，关键字冒号后面要加空格，而且一定要区分全角和半角，不然是没有效果显示的。 参考文档https://yushuaige.github.io/ https://shen-yu.gitee.io/2019/ayer/ https://blog.csdn.net/a6661314/article/details/122975744","categories":[{"name":"博客搭建","slug":"博客搭建","permalink":"http://example.com/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"}],"tags":[{"name":"博客搭建，hexo","slug":"博客搭建，hexo","permalink":"http://example.com/tags/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%EF%BC%8Chexo/"}]},{"title":"我的第一篇博客","slug":"我的第一篇博客","date":"2022-05-08T01:07:32.000Z","updated":"2022-05-08T02:16:57.597Z","comments":true,"path":"2022/05/08/我的第一篇博客/","link":"","permalink":"http://example.com/2022/05/08/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/","excerpt":"","text":"hello-world-·-一个后来才知道努力地孩子的第一篇测试博客&#10084; &emsp; 人间烟火，山河远阔 &emsp; 一岁有一岁的味道，一站有一站的风景，花会沿路盛开 以后的路也是，希望我们都在各自的未来里闪闪发光！ &#9733;","categories":[],"tags":[{"name":"test","slug":"test","permalink":"http://example.com/tags/test/"}]}],"categories":[{"name":"博客搭建","slug":"博客搭建","permalink":"http://example.com/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"}],"tags":[{"name":"博客搭建，Hexo","slug":"博客搭建，Hexo","permalink":"http://example.com/tags/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%EF%BC%8CHexo/"},{"name":"博客搭建，hexo","slug":"博客搭建，hexo","permalink":"http://example.com/tags/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%EF%BC%8Chexo/"},{"name":"test","slug":"test","permalink":"http://example.com/tags/test/"}]}